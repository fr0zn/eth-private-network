version: '3.7'
services:
  netstats:
    hostname: netstats
    ports:
      - 3000:3000
    build:
      context: netstats
    container_name: netstats
    environment:
      WS_SECRET: ${NETSTATS_SECRET}
    networks:
      - research
  node:
    build:
      context: node
      dockerfile: Dockerfile.rpc
    container_name: node
    ports:
      - 8545:8545
    command: geth
      --syncmode full
      --datadir /data
      --networkid ${NETWORK_ID}
      --http --http.addr 0.0.0.0 --http.corsdomain "*" --http.api "eth,web3,net,debug,txpool"
      --ethstats node:${NETSTATS_SECRET}@netstats:3000
      --miner.gasprice 0
      --http.vhosts=*
      --nodekey /data/node.key
      --nodiscover
    networks:
      research:
        ipv4_address: 172.2.0.110
  node-miner-1:
    depends_on:
      - netstats
    build:
      context: node
    container_name: node-miner-1
    ports:
      - 8546:8545
    command: geth
      --syncmode full
      --datadir /data
      --networkid ${NETWORK_ID}
      --http --http.addr 0.0.0.0 --http.corsdomain "*" --http.api "eth,web3,net,admin,miner"
      --mine --miner.etherbase ${ACCOUNT_1} --miner.gasprice 0
      --unlock ${ACCOUNT_1} --password /data/password.txt
      --allow-insecure-unlock
      --ethstats node-miner-1:${NETSTATS_SECRET}@netstats:3000
      --http.vhosts=*
      --nodekey /data/miner1.key
      --nodiscover
    networks:
      research:
        ipv4_address: 172.2.0.111
  node-miner-2:
    depends_on:
      - netstats
    build:
      context: node
    container_name: node-miner-2
    ports:
      - 8547:8545
    command: geth
      --syncmode full
      --datadir /data
      --networkid ${NETWORK_ID}
      --http --http.addr 0.0.0.0 --http.corsdomain "*" --http.api "eth,web3,net,admin,miner"
      --mine --miner.etherbase ${ACCOUNT_2} --miner.gasprice 0
      --unlock ${ACCOUNT_2} --password /data/password.txt
      --allow-insecure-unlock
      --ethstats node-miner-2:${NETSTATS_SECRET}@netstats:3000
      --http.vhosts=*
      --nodekey /data/miner2.key
      --nodiscover
    networks:
      research:
        ipv4_address: 172.2.0.112

  #node-swarm-1:
  #  depends_on:
  #    - bootnode
  #  ports:
  #    - 8500:8500
  #  command: swarm
  #    --bootnodes enode://${BOOTNODE_ID}@172.2.0.111:30301
  #    --bzzapi 0.0.0.0 --corsdomain "*" --httpaddr 0.0.0.0
  #    --bzzaccount ${ACCOUNT_1} --password password.txt
  #    --bzznetworkid ${NETWORK_ID}
  #  build:
  #    context: node
  #  container_name: node-swarm-1
  #  networks:
  #    - research
  #node-swarm-2:
  #  depends_on:
  #    - bootnode
  #  ports:
  #    - 8501:8500
  #  command: swarm
  #    --bootnodes enode://${BOOTNODE_ID}@172.2.0.111:30301
  #    --bzzapi 0.0.0.0 --corsdomain "*" --httpaddr 0.0.0.0
  #    --bzzaccount ${ACCOUNT_2} --password password.txt
  #    --bzznetworkid ${NETWORK_ID}
  #  build:
  #    context: node
  #  container_name: node-swarm-2
  #  networks:
  #    - research

  faucet:
    image: chainflag/eth-faucet:1.1.0
    container_name: ethfaucet
    environment:
      - WEB3_PROVIDER=http://node-miner-1:8545
    ports:
      - "8080:8080"
    volumes:
      - ./node/keystore:/app/keystore
      - ./node/password.txt:/app/password.txt
    command: -wallet.keyjson /app/keystore -wallet.keypass /app/password.txt -faucet.minutes 1
    depends_on:
      - node
    networks:
      - research
    restart: always

  # db:
  #   image: postgres:13.6
  #   restart: always
  #   container_name: 'postgres'
  #   environment:
  #       POSTGRES_PASSWORD: ''
  #       POSTGRES_USER: 'postgres'
  #       POSTGRES_HOST_AUTH_METHOD: 'trust'
  #   ports:
  #     - 7432:5432
  #   networks:
  #     - research

  # blockscout:
  #   depends_on:
  #     - db
  #   image: blockscout/blockscout:${DOCKER_TAG:-latest}
  #   build:
  #     context: explorer
  #     dockerfile: ./docker/Dockerfile
  #     args:
  #       COIN: ""
  #   restart: always
  #   container_name: 'blockscout'
  #   links:
  #     - db:database
  #   command: 'mix do ecto.create, ecto.migrate, phx.server'
  #   extra_hosts:
  #     - 'host.docker.internal:host-gateway'
  #   env_file:
  #     -  ./common-blockscout.env
  #   ports:
  #     - 4000:4000
  #   networks:
  #     - research
networks:
  research:
    name: eth
    driver: bridge
    ipam:
      config:
        - subnet: 172.2.0.0/24
